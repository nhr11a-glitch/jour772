knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# Remove scientific notation
options(scipen=999)
# Load the tidyverse
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024_20250115.csv", guess_max=10)
problems(payments)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024_20250115.csv", guess_max=369008)
glimpse(payments)
payments |>
group_by(`Vendor Zip`) |>
filter(str_length(`Vendor Zip`) < 5) |>
summarise(
count=n()
) |>
arrange(desc(count))
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022_20250115.csv")
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
arrange(`Fiscal Year`)
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
arrange(Category)
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
filter(Category == "NA")
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
filter(Category == NA)
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
filter(Category == 'NA')
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
filter(Category =='NA')
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
arrange(`Fiscal Year`)
md_grants_loans |>
arrange(Amount)
install.packages('janitor')
library(janitor)
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names()
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor)
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description))
# display the cleaned dataset
cleaned_md_grants_loans
cleaned_md_grants_loans |>
get_dupes()
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description)) |>
distinct()
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description)) |>
distinct() |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L))
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description)) |>
distinct() |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5
))
# display the cleaned dataset
cleaned_md_grants_loans
cleaned_md_grants_loans |>
filter(source == 'COMMERCE/MARYLAND TOURISM BOARD') |>
group_by(zip5) |>
summarize(total_amount = sum(amount)) |>
arrange(desc(total_amount))
