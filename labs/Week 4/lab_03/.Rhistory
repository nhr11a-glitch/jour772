filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
select(vendor_name, vendor_zip) |>
group_by(vendor_name)
summarise(total_amount = sum(amount, na.rm=TRUE))
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
select(vendor_name, vendor_zip) |>
group_by(vendor_name) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
rlang::last_trace()
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
select(vendor_name, vendor_zip, amount) |>
group_by(vendor_name) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
View(capital_umd)
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
select(vendor_name, amount, vendor_zip) |>
group_by(vendor_name) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
View(capital_umd)
capital_umd <- payments
capital_umd |>
group_by(vendor_name) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
View(capital_umd)
capital_umd <- payments
capital_umd |>
group_by(vendor_name, vendor_zip) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
capital_umd <- payments
capital_umd |>
group_by(vendor_name) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
capital_umd |> get_dupes()
capital_umd |> get_dupes(vendor_name)
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
capital_umd |>
group_by(vendor_name) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
capital_umd |> get_dupes(vendor_name)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# Remove scientific notation
options(scipen=999)
# Load the tidyverse
library(tidyverse)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024_20250115.csv", guess_max=10)
problems(payments)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024_20250115.csv", guess_max=369008)
glimpse(payments)
payments |>
group_by(`Vendor Zip`) |>
filter(str_length(`Vendor Zip`) < 5) |>
summarise(
count=n()
) |>
arrange(desc(count))
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022_20250115.csv")
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
arrange(`Fiscal Year`)
md_grants_loans |>
arrange(Amount)
install.packages('janitor')
library(janitor)
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names()
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor)
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description))
# display the cleaned dataset
cleaned_md_grants_loans
cleaned_md_grants_loans |>
get_dupes()
install.packages("janitor")
capital_umd |> get_dupes(vendor_name, date)
capital_umd |> get_dupes(vendor_name, date, vendor_zip, amount)
capital_umd |> get_dupes(vendor_name, date)
capital_umd |> get_dupes(vendor_name, vendor_zip)
capital_umd |> get_dupes(vendor_name, vendor_zip) |>
group_by(date)
capital_umd |> get_dupes(vendor_name, vendor_zip) |>
group_by(date) |>
arrange(desc(date))
capital_umd |> get_dupes(vendor_name, vendor_zip)
capital_umd |> get_dupes(vendor_name, date)
capital_umd |> get_dupes(date)
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
group_by(vendor_name)
capital_umd <- payments |>
filter('Agency Name' == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
group_by('Vendor Name')
View(capital_umd)
capital_umd <- payments |>
filter('Agency Name' == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
capital_umd <- payments |>
filter('Agency Name' == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation
options(scipen=999)
library(tidyverse)
library(janitor)
# Load in the Maryland state agency payments data, making sure that it correctly sets the datatypes using all of the rows
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv", guess_max=369008)
payments <- payments |>
clean_names()
# Load in the Maryland grants and loan data
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022.csv", guess_max=19482)
md_grants_loans <- md_grants_loans |>
clean_names()
pg_schools <- payments |> filter(str_detect(vendor_name, 'PRINCE GEORGES COUNTY PUBLIC SCHOOLS') | str_detect(vendor_name, 'BOARD OF EDUCATION OF PRINCE GEORGES COUNTY') | str_detect(vendor_name, 'PG COUNTY PUBLIC SCHOOL') | str_detect(vendor_name, 'BD OF EDUCATION OF PG CO') | str_detect(vendor_name, 'BOARD OF EDUCATION OF PRINCE GEORGES COUNTY MD') | str_detect(vendor_name, 'PRINCE GEORGES PUBLIC SCHOOLS') | str_detect(vendor_name, 'PRINCE GEORGES COUNTY SCHOOL') | str_detect(vendor_name, 'BOARD OF EDUCATION OF PRINCE GEORGE'))
pg_schools |>
group_by(fiscal_year) |>
summarize(count=n()) |>
arrange(desc(count))
pg_schools |>
group_by(fiscal_year) |>
summarise(total_amount = sum(amount, na.rm=TRUE)) |>
arrange(desc(total_amount))
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
group_by(vendor_name)
View(capital_umd)
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
group_by(vendor_name, amount)
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
group_by(vendor_name)
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
group_by(vendor_name, vendor_zip) |>
summarise(total = sum(amount))
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
group_by(vendor_name, vendor_zip) |>
summarise(total = sum(amount))
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
group_by(vendor_name, vendor_zip) |>
summarise(total = sum(amount))
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
capital_umd |>
group_by(vendor_name, vendor_zip) |>
summarise(total = sum(amount))
capital_umd |> get_dupes()
capital_umd |> get_dupes(vendor_name)
capital_umd |> get_dupes()
capital_umd |> get_dupes()
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
# Remove scientific notation
options(scipen=999)
# Load the tidyverse
library(tidyverse)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024_20250115.csv", guess_max=10)
problems(payments)
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024_20250115.csv", guess_max=369008)
glimpse(payments)
payments |>
group_by(`Vendor Zip`) |>
filter(str_length(`Vendor Zip`) < 5) |>
summarise(
count=n()
) |>
arrange(desc(count))
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022_20250115.csv")
md_grants_loans |>
group_by(`Fiscal Year`, Category) |>
summarize(count = n()) |>
arrange(`Fiscal Year`)
md_grants_loans |>
arrange(Amount)
install.packages('janitor')
library(janitor)
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names()
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor)
# display the cleaned dataset
cleaned_md_grants_loans
# cleaning function
cleaned_md_grants_loans <- md_grants_loans |>
clean_names() |>
rename(source = grantor) |>
mutate(source = str_to_upper(source), grantee = str_to_upper(grantee), description = str_to_upper(description))
# display the cleaned dataset
cleaned_md_grants_loans
knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation
options(scipen=999)
library(tidyverse)
library(janitor)
# Load in the Maryland state agency payments data, making sure that it correctly sets the datatypes using all of the rows
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv", guess_max=369008)
payments <- payments |>
clean_names()
# Load in the Maryland grants and loan data
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022.csv", guess_max=19482)
md_grants_loans <- md_grants_loans |>
clean_names()
pg_schools <- payments |> filter(str_detect(vendor_name, 'PRINCE GEORGES COUNTY PUBLIC SCHOOLS') | str_detect(vendor_name, 'BOARD OF EDUCATION OF PRINCE GEORGES COUNTY') | str_detect(vendor_name, 'PG COUNTY PUBLIC SCHOOL') | str_detect(vendor_name, 'BD OF EDUCATION OF PG CO') | str_detect(vendor_name, 'BOARD OF EDUCATION OF PRINCE GEORGES COUNTY MD') | str_detect(vendor_name, 'PRINCE GEORGES PUBLIC SCHOOLS') | str_detect(vendor_name, 'PRINCE GEORGES COUNTY SCHOOL') | str_detect(vendor_name, 'BOARD OF EDUCATION OF PRINCE GEORGE'))
pg_schools |>
group_by(fiscal_year) |>
summarize(count=n()) |>
arrange(desc(count))
pg_schools |>
group_by(fiscal_year) |>
summarise(total_amount = sum(amount, na.rm=TRUE)) |>
arrange(desc(total_amount))
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
capital_umd |>
group_by(vendor_name, vendor_zip) |>
summarise(total = sum(amount))
capital_umd |> get_dupes()
View(cleaned_md_grants_loans)
View(md_grants_loans)
Stem Cell Research Grant
STEM CELL RESEARCH GRANT
md_grants_loans|>
mutate(description = str_to_upper(description)) |>
filter(str_detect(description, "STEM CELL"))
stem_cell_research <- md_grants_loans|>
mutate(description = str_to_upper(description)) |>
filter(str_detect(description, "STEM CELL"))
View(stem_cell_research)
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
capital_umd |>
group_by(vendor_name, vendor_zip) |>
summarise(total = sum(amount, na.rm=TRUE))
stem_cell_research <- md_grants_loans|>
mutate(description = str_to_upper(description)) |>
filter(str_detect(description, "STEM CELL")) |>
group_by(fiscal_year)|>
summarise(total = sum(amount, na.rm=TRUE))
stem_cell_research <- md_grants_loans|>
mutate(description = str_to_upper(description)) |>
filter(str_detect(description, "STEM CELL"))
stem_cell_research |>
group_by(fiscal_year)|>
summarise(total = sum(amount, na.rm=TRUE))
stem_cell_research <- md_grants_loans|>
mutate(description = str_to_upper(description)) |>
filter(str_detect(description, " STEM CELL "))
stem_cell_research |>
group_by(fiscal_year)|>
summarise(total = sum(amount, na.rm=TRUE))
stem_cell_research <- md_grants_loans|>
mutate(description = str_to_upper(description)) |>
filter(str_detect(description, "STEM CELL "))
stem_cell_research |>
group_by(fiscal_year)|>
summarise(total = sum(amount, na.rm=TRUE))
View(md_grants_loans)
umd_zip_grantees <- md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L))
umd_zip_grantees <- md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L))
View(md_grants_loans)
umd_zip_grantees <- md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5
))
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5
))
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L))
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5
))
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5)) |>
filter(zip5, '20742')
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5)) |>
filter(zip5 == '20742')
View(md_grants_loans)
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5))
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5))|>
filter(zip5 == '20742')
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
filter(zip5 == '20742')
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5))|>
filter(zip5 == '20742')
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5))|>
filter(zip5 == '20742') |>
group_by(grantee)|>
summarise(total = sum(amount, na.rm=TRUE))
capital_umd |> get_dupes()
capital_umd |> mutate(vendor_name = str_squish(vendor_name))
capital_umd |> get_dupes()
capital_umd |> mutate(vendor_name = str_replace_all(vendor_name, " ", ""))
View(capital_umd)
capital_umd |> get_dupes()
capital_umd |> mutate(vendor_name = str_replace_all(vendor_name, " ", ""))
capital_umd |> mutate(vendor_name = str_remove(vendor_name, "&"))
capital_umd |> get_dupes()
capital_umd |> mutate(vendor_name = str_replace_all(vendor_name, " ", ""))
capital_umd |> mutate(vendor_name = str_remove(vendor_name, ","))
capital_umd |> get_dupes()
capital_umd |> mutate(vendor_name = str_replace_all(vendor_name, " ", ""))
capital_umd |> mutate(vendor_name = str_remove(vendor_name, " , "))
View(capital_umd)
Stem Cell Research Grant, Pre-Commercialization Research
pg_schools |>
group_by(fiscal_year) |>
summarize(count=n()) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
pg_schools |>
group_by(fiscal_year, amount) |>
summarize(count=n()) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
pg_schools |>
group_by(fiscal_year) |>
summarize(count=n()) |>
group_by(fiscal_year) |>
summarise(total_amount = sum(amount, na.rm=TRUE))
pg_schools |>
group_by(fiscal_year) |>
summarise(total_amount = sum(amount, na.rm=TRUE)) |>
arrange(desc(total_amount))
pg_schools %>%
select(fiscal_year, amount) %>%
group_by(fiscal_year) %>%
summarize(Total=n())
sum(amount,na.rm=TRUE) %>%
arrange(desc(Total))
pg_schools %>%
select(fiscal_year, amount) %>%
group_by(fiscal_year) %>%
summarize(Total=n())
sum(amount,na.rm=TRUE) %>%
arrange(desc(Total))
pg_schools %>%
select(fiscal_year, amount) %>%
group_by(fiscal_year) %>%
summarize(count=n())
total = (sum(amount,na.rm=TRUE)) %>%
pg_schools %>%
group_by(fiscal_year) %>%
summarise(count = n(),total = sum(amount, na.rm=TRUE))
pg_schools %>%
group_by(fiscal_year) %>%
summarise(count = n(),total = sum(amount, na.rm=TRUE))
arrange(desc(count))
pg_schools %>%
group_by(fiscal_year) %>%
summarise(count = n(),total = sum(amount, na.rm=TRUE))
arrange(desc(count))
pg_schools %>%
group_by(fiscal_year) %>%
summarise(count = n(),total = sum(amount, na.rm=TRUE))
arrange(count)
pg_schools %>%
group_by(fiscal_year) %>%
summarise(count = n(),total = sum(amount, na.rm=TRUE))
pg_schools |> arrange(desc(total))
pg_schools %>%
group_by(fiscal_year) %>%
summarise(count = n(),total = sum(amount, na.rm=TRUE))
pg_schools %>%
group_by(fiscal_year) %>%
summarise(count = n(),total = sum(amount, na.rm=TRUE)) |>
arrange(desc(total))
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5))|>
filter(zip5 == '20742') |>
group_by(grantee)|>
summarise(total = sum(amount, na.rm=TRUE))
knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation
options(scipen=999)
library(tidyverse)
library(janitor)
# Load in the Maryland state agency payments data, making sure that it correctly sets the datatypes using all of the rows
payments <- read_csv("data/State_of_Maryland_Payments_Data__FY2008_to_FY2024.csv", guess_max=369008)
payments <- payments |>
clean_names()
# Load in the Maryland grants and loan data
md_grants_loans <- read_csv("data/State_of_Maryland_Grant_and_Loan_Data__FY2009_to_FY2022.csv", guess_max=19482)
md_grants_loans <- md_grants_loans |>
clean_names()
pg_schools <- payments |> filter(str_detect(vendor_name, 'PRINCE GEORGES COUNTY PUBLIC SCHOOLS') | str_detect(vendor_name, 'BOARD OF EDUCATION OF PRINCE GEORGES COUNTY') | str_detect(vendor_name, 'PG COUNTY PUBLIC SCHOOL') | str_detect(vendor_name, 'BD OF EDUCATION OF PG CO') | str_detect(vendor_name, 'BOARD OF EDUCATION OF PRINCE GEORGES COUNTY MD') | str_detect(vendor_name, 'PRINCE GEORGES PUBLIC SCHOOLS') | str_detect(vendor_name, 'PRINCE GEORGES COUNTY SCHOOL') | str_detect(vendor_name, 'BOARD OF EDUCATION OF PRINCE GEORGE'))
pg_schools %>%
group_by(fiscal_year) %>%
summarise(count = n(),total = sum(amount, na.rm=TRUE)) |>
arrange(desc(total))
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
capital_umd |>
group_by(vendor_name, vendor_zip) |>
summarise(total = sum(amount, na.rm=TRUE))
capital_umd |> get_dupes()
capital_umd |> mutate(vendor_name = str_replace_all(vendor_name, " ", ""))
capital_umd |> mutate(vendor_name = str_remove(vendor_name, ","))
stem_cell_research <- md_grants_loans|>
mutate(description = str_to_upper(description)) |>
filter(str_detect(description, "STEM CELL ")) |>
group_by(fiscal_year)|>
summarise(total = sum(amount, na.rm=TRUE))
View(stem_cell_research)
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND') |>
group_by(vendor_name, vendor_zip) |>
summarise(total = sum(amount, na.rm=TRUE))
capital_umd <- payments |>
filter(agency_name == 'CAPITAL PROJECTS- UNIVERSITY OF MARYLAND')
capital_umd |>
group_by(vendor_name, vendor_zip) |>
summarise(total = sum(amount, na.rm=TRUE))
stem_cell_research <- md_grants_loans|>
mutate(description = str_to_upper(description)) |>
filter(str_detect(description, "STEM CELL RESEARCH ")) |>
group_by(fiscal_year)|>
summarise(total = sum(amount, na.rm=TRUE))
stem_cell_research <- md_grants_loans|>
mutate(description = str_to_upper(description)) |>
filter(str_detect(description, "STEM CELL RESEARCH ")) |>
group_by(fiscal_year)|>
summarise(total = sum(amount, na.rm=TRUE))
View(stem_cell_research)
md_grants_loans |>
mutate(zip5 = str_sub(zip_code, start=1L, end=5L)) |>
mutate(zip5 = case_when(
zip5 == "Vario" ~ NA,
zip5 == "UB7 O" ~ NA,
zip5 == "UB7 " ~ NA,
.default = zip5))|>
filter(zip5 == '20742') |>
group_by(grantee)|>
summarise(total = sum(amount, na.rm=TRUE))
